name: Test and Coverage Report

on:
  push:
  
  pull_requests:

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Run tests with coverage
        run: go test ./... -coverprofile=coverage.out -covermode=atomic

      - name: Generate coverage report
        run: |
          go tool cover -func=coverage.out > coverage.txt
          echo "## Coverage Report" > coverage_report.md
          echo "| Package | Coverage |" >> coverage_report.md
          echo "|---------|----------|" >> coverage_report.md
          grep -v "total:" coverage.txt | awk '{print "| " $1 " | " $3 " |"}' >> coverage_report.md
          echo "| **Total** | **$(grep "total:" coverage.txt | awk '{print $3}')**|" >> coverage_report.md

      - name: Add coverage report to summary
        run: |
          echo "$(cat coverage_report.md)" >> $GITHUB_STEP_SUMMARY

      - name: Check coverage threshold
        run: |
          TOTAL_COVERAGE=$(grep "total:" coverage.txt | awk '{print $3}' | sed 's/%//')
          if (( $(echo "$TOTAL_COVERAGE < 80" | bc -l) )); then
            echo "Coverage is below 80%"
            exit 1
          fi

      - name: Comment PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs')
            const report = fs.readFileSync('coverage_report.md', 'utf8')
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            })
